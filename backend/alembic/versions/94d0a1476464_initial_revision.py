"""Initial Revision

Revision ID: 94d0a1476464
Revises: 
Create Date: 2025-10-17 14:52:10.861216

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '94d0a1476464'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('total_visits', sa.Integer(), nullable=False),
    sa.Column('total_spent', sa.Integer(), nullable=False),
    sa.Column('last_visit_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customers_last_visit_at'), 'customers', ['last_visit_at'], unique=False)
    op.create_index(op.f('ix_customers_phone'), 'customers', ['phone'], unique=True)
    op.create_table('events',
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('aggregate_type', sa.String(), nullable=False),
    sa.Column('aggregate_id', sa.String(length=26), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('event_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_aggregate_id'), 'events', ['aggregate_id'], unique=False)
    op.create_index(op.f('ix_events_aggregate_type'), 'events', ['aggregate_type'], unique=False)
    op.create_index(op.f('ix_events_event_type'), 'events', ['event_type'], unique=False)
    op.create_table('inventory_categories',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('name', sa.Enum('OWNER', 'RECEPTIONIST', 'STAFF', name='roleenum'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('service_categories',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('suppliers',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('contact_person', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('services',
    sa.Column('category_id', sa.String(length=26), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_price', sa.Integer(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['service_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_services_category_id'), 'services', ['category_id'], unique=False)
    op.create_index(op.f('ix_services_is_active'), 'services', ['is_active'], unique=False)
    op.create_table('skus',
    sa.Column('category_id', sa.String(length=26), nullable=False),
    sa.Column('supplier_id', sa.String(length=26), nullable=True),
    sa.Column('sku_code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('uom', sa.Enum('PIECE', 'ML', 'GM', 'KG', 'LITER', 'BOX', 'BOTTLE', name='uomenum'), nullable=False),
    sa.Column('reorder_point', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('current_stock', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('avg_cost_per_unit', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['inventory_categories.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sku_code')
    )
    op.create_index(op.f('ix_skus_category_id'), 'skus', ['category_id'], unique=False)
    op.create_index(op.f('ix_skus_current_stock'), 'skus', ['current_stock'], unique=False)
    op.create_index(op.f('ix_skus_is_active'), 'skus', ['is_active'], unique=False)
    op.create_index(op.f('ix_skus_supplier_id'), 'skus', ['supplier_id'], unique=False)
    op.create_table('users',
    sa.Column('role_id', sa.String(length=26), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_role_id'), 'users', ['role_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('audit_log',
    sa.Column('user_id', sa.String(length=26), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('entity_id', sa.String(length=26), nullable=False),
    sa.Column('old_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('device_id', sa.String(), nullable=True),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_log_entity_id'), 'audit_log', ['entity_id'], unique=False)
    op.create_index(op.f('ix_audit_log_entity_type'), 'audit_log', ['entity_type'], unique=False)
    op.create_index(op.f('ix_audit_log_user_id'), 'audit_log', ['user_id'], unique=False)
    op.create_table('bills',
    sa.Column('invoice_number', sa.String(), nullable=False),
    sa.Column('customer_id', sa.String(length=26), nullable=True),
    sa.Column('subtotal', sa.Integer(), nullable=False),
    sa.Column('discount_amount', sa.Integer(), nullable=False),
    sa.Column('tax_amount', sa.Integer(), nullable=False),
    sa.Column('cgst_amount', sa.Integer(), nullable=False),
    sa.Column('sgst_amount', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Integer(), nullable=False),
    sa.Column('rounded_total', sa.Integer(), nullable=False),
    sa.Column('rounding_adjustment', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'POSTED', 'REFUNDED', 'VOID', name='billstatus'), nullable=False),
    sa.Column('posted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('customer_name', sa.String(), nullable=True),
    sa.Column('customer_phone', sa.String(), nullable=True),
    sa.Column('discount_reason', sa.Text(), nullable=True),
    sa.Column('discount_approved_by', sa.String(length=26), nullable=True),
    sa.Column('refunded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('refund_reason', sa.Text(), nullable=True),
    sa.Column('refund_approved_by', sa.String(length=26), nullable=True),
    sa.Column('original_bill_id', sa.String(length=26), nullable=True),
    sa.Column('created_by', sa.String(length=26), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['discount_approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['original_bill_id'], ['bills.id'], ),
    sa.ForeignKeyConstraint(['refund_approved_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bills_customer_id'), 'bills', ['customer_id'], unique=False)
    op.create_index(op.f('ix_bills_invoice_number'), 'bills', ['invoice_number'], unique=True)
    op.create_index(op.f('ix_bills_posted_at'), 'bills', ['posted_at'], unique=False)
    op.create_index(op.f('ix_bills_status'), 'bills', ['status'], unique=False)
    op.create_table('cash_drawer',
    sa.Column('opened_by', sa.String(length=26), nullable=False),
    sa.Column('opened_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('opening_float', sa.Integer(), nullable=False),
    sa.Column('closed_by', sa.String(length=26), nullable=True),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('closing_counted', sa.Integer(), nullable=True),
    sa.Column('expected_cash', sa.Integer(), nullable=False),
    sa.Column('variance', sa.Integer(), nullable=True),
    sa.Column('reopened_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reopened_by', sa.String(length=26), nullable=True),
    sa.Column('reopen_reason', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.ForeignKeyConstraint(['closed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['opened_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reopened_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('day_summary',
    sa.Column('summary_date', sa.Date(), nullable=False),
    sa.Column('total_bills', sa.Integer(), nullable=False),
    sa.Column('refund_count', sa.Integer(), nullable=False),
    sa.Column('gross_revenue', sa.Integer(), nullable=False),
    sa.Column('discount_amount', sa.Integer(), nullable=False),
    sa.Column('refund_amount', sa.Integer(), nullable=False),
    sa.Column('net_revenue', sa.Integer(), nullable=False),
    sa.Column('cgst_collected', sa.Integer(), nullable=False),
    sa.Column('sgst_collected', sa.Integer(), nullable=False),
    sa.Column('total_tax', sa.Integer(), nullable=False),
    sa.Column('cash_collected', sa.Integer(), nullable=False),
    sa.Column('digital_collected', sa.Integer(), nullable=False),
    sa.Column('estimated_cogs', sa.Integer(), nullable=False),
    sa.Column('estimated_profit', sa.Integer(), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('generated_by', sa.String(length=26), nullable=True),
    sa.Column('is_final', sa.Boolean(), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['generated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_day_summary_summary_date'), 'day_summary', ['summary_date'], unique=True)
    op.create_table('export_log',
    sa.Column('export_type', sa.String(), nullable=False),
    sa.Column('export_format', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('exported_by', sa.String(length=26), nullable=False),
    sa.Column('exported_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['exported_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_export_log_exported_at'), 'export_log', ['exported_at'], unique=False)
    op.create_table('inventory_change_requests',
    sa.Column('sku_id', sa.String(length=26), nullable=False),
    sa.Column('change_type', sa.Enum('RECEIVE', 'ADJUST', 'CONSUME', name='changetype'), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_cost', sa.Integer(), nullable=True),
    sa.Column('reason_code', sa.String(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='changestatus'), nullable=False),
    sa.Column('requested_by', sa.String(length=26), nullable=False),
    sa.Column('requested_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('reviewed_by', sa.String(length=26), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('review_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['requested_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['skus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inventory_change_requests_sku_id'), 'inventory_change_requests', ['sku_id'], unique=False)
    op.create_index(op.f('ix_inventory_change_requests_status'), 'inventory_change_requests', ['status'], unique=False)
    op.create_table('service_addons',
    sa.Column('service_id', sa.String(length=26), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_addons_service_id'), 'service_addons', ['service_id'], unique=False)
    op.create_table('staff',
    sa.Column('user_id', sa.String(length=26), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('specialization', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_user_id'), 'staff', ['user_id'], unique=True)
    op.create_table('appointments',
    sa.Column('ticket_number', sa.String(), nullable=False),
    sa.Column('visit_id', sa.String(length=26), nullable=True),
    sa.Column('customer_id', sa.String(length=26), nullable=True),
    sa.Column('service_id', sa.String(length=26), nullable=False),
    sa.Column('assigned_staff_id', sa.String(length=26), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'CHECKED_IN', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'NO_SHOW', name='appointmentstatus'), nullable=False),
    sa.Column('checked_in_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('customer_name', sa.String(), nullable=False),
    sa.Column('customer_phone', sa.String(), nullable=False),
    sa.Column('booking_notes', sa.Text(), nullable=True),
    sa.Column('service_notes', sa.Text(), nullable=True),
    sa.Column('service_notes_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=26), nullable=False),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_staff_id'], ['staff.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_assigned_staff_id'), 'appointments', ['assigned_staff_id'], unique=False)
    op.create_index(op.f('ix_appointments_customer_id'), 'appointments', ['customer_id'], unique=False)
    op.create_index(op.f('ix_appointments_scheduled_at'), 'appointments', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_appointments_status'), 'appointments', ['status'], unique=False)
    op.create_index(op.f('ix_appointments_ticket_number'), 'appointments', ['ticket_number'], unique=True)
    op.create_table('payments',
    sa.Column('bill_id', sa.String(length=26), nullable=False),
    sa.Column('payment_method', sa.Enum('CASH', 'UPI', 'CARD', 'OTHER', name='paymentmethod'), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('confirmed_by', sa.String(length=26), nullable=False),
    sa.Column('reference_number', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bill_id'], ['bills.id'], ),
    sa.ForeignKeyConstraint(['confirmed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_bill_id'), 'payments', ['bill_id'], unique=False)
    op.create_table('stock_ledger',
    sa.Column('sku_id', sa.String(length=26), nullable=False),
    sa.Column('change_request_id', sa.String(length=26), nullable=True),
    sa.Column('transaction_type', sa.String(), nullable=False),
    sa.Column('quantity_change', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('quantity_after', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_cost', sa.Integer(), nullable=True),
    sa.Column('total_value', sa.Integer(), nullable=True),
    sa.Column('avg_cost_after', sa.Integer(), nullable=True),
    sa.Column('reference_type', sa.String(), nullable=True),
    sa.Column('reference_id', sa.String(length=26), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.String(length=26), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['change_request_id'], ['inventory_change_requests.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['skus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_ledger_sku_id'), 'stock_ledger', ['sku_id'], unique=False)
    op.create_table('walkins',
    sa.Column('ticket_number', sa.String(), nullable=False),
    sa.Column('visit_id', sa.String(length=26), nullable=True),
    sa.Column('customer_id', sa.String(length=26), nullable=True),
    sa.Column('service_id', sa.String(length=26), nullable=False),
    sa.Column('assigned_staff_id', sa.String(length=26), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'CHECKED_IN', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'NO_SHOW', name='appointmentstatus'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('customer_name', sa.String(), nullable=False),
    sa.Column('customer_phone', sa.String(), nullable=False),
    sa.Column('service_notes', sa.Text(), nullable=True),
    sa.Column('service_notes_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=26), nullable=False),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_staff_id'], ['staff.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_walkins_assigned_staff_id'), 'walkins', ['assigned_staff_id'], unique=False)
    op.create_index(op.f('ix_walkins_customer_id'), 'walkins', ['customer_id'], unique=False)
    op.create_index(op.f('ix_walkins_ticket_number'), 'walkins', ['ticket_number'], unique=True)
    op.create_table('bill_items',
    sa.Column('bill_id', sa.String(length=26), nullable=False),
    sa.Column('service_id', sa.String(length=26), nullable=False),
    sa.Column('appointment_id', sa.String(length=26), nullable=True),
    sa.Column('walkin_id', sa.String(length=26), nullable=True),
    sa.Column('staff_id', sa.String(length=26), nullable=True),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('base_price', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('line_total', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ),
    sa.ForeignKeyConstraint(['bill_id'], ['bills.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.ForeignKeyConstraint(['walkin_id'], ['walkins.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bill_items_bill_id'), 'bill_items', ['bill_id'], unique=False)
    op.create_index(op.f('ix_bill_items_service_id'), 'bill_items', ['service_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_bill_items_service_id'), table_name='bill_items')
    op.drop_index(op.f('ix_bill_items_bill_id'), table_name='bill_items')
    op.drop_table('bill_items')
    op.drop_index(op.f('ix_walkins_ticket_number'), table_name='walkins')
    op.drop_index(op.f('ix_walkins_customer_id'), table_name='walkins')
    op.drop_index(op.f('ix_walkins_assigned_staff_id'), table_name='walkins')
    op.drop_table('walkins')
    op.drop_index(op.f('ix_stock_ledger_sku_id'), table_name='stock_ledger')
    op.drop_table('stock_ledger')
    op.drop_index(op.f('ix_payments_bill_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_appointments_ticket_number'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_status'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_scheduled_at'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_customer_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_assigned_staff_id'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_staff_user_id'), table_name='staff')
    op.drop_table('staff')
    op.drop_index(op.f('ix_service_addons_service_id'), table_name='service_addons')
    op.drop_table('service_addons')
    op.drop_index(op.f('ix_inventory_change_requests_status'), table_name='inventory_change_requests')
    op.drop_index(op.f('ix_inventory_change_requests_sku_id'), table_name='inventory_change_requests')
    op.drop_table('inventory_change_requests')
    op.drop_index(op.f('ix_export_log_exported_at'), table_name='export_log')
    op.drop_table('export_log')
    op.drop_index(op.f('ix_day_summary_summary_date'), table_name='day_summary')
    op.drop_table('day_summary')
    op.drop_table('cash_drawer')
    op.drop_index(op.f('ix_bills_status'), table_name='bills')
    op.drop_index(op.f('ix_bills_posted_at'), table_name='bills')
    op.drop_index(op.f('ix_bills_invoice_number'), table_name='bills')
    op.drop_index(op.f('ix_bills_customer_id'), table_name='bills')
    op.drop_table('bills')
    op.drop_index(op.f('ix_audit_log_user_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_entity_type'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_entity_id'), table_name='audit_log')
    op.drop_table('audit_log')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_role_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_skus_supplier_id'), table_name='skus')
    op.drop_index(op.f('ix_skus_is_active'), table_name='skus')
    op.drop_index(op.f('ix_skus_current_stock'), table_name='skus')
    op.drop_index(op.f('ix_skus_category_id'), table_name='skus')
    op.drop_table('skus')
    op.drop_index(op.f('ix_services_is_active'), table_name='services')
    op.drop_index(op.f('ix_services_category_id'), table_name='services')
    op.drop_table('services')
    op.drop_table('suppliers')
    op.drop_table('service_categories')
    op.drop_table('roles')
    op.drop_table('inventory_categories')
    op.drop_index(op.f('ix_events_event_type'), table_name='events')
    op.drop_index(op.f('ix_events_aggregate_type'), table_name='events')
    op.drop_index(op.f('ix_events_aggregate_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_customers_phone'), table_name='customers')
    op.drop_index(op.f('ix_customers_last_visit_at'), table_name='customers')
    op.drop_table('customers')
    # ### end Alembic commands ###
